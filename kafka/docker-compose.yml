networks:
  kafka_network:
    driver: bridge

services:
  kafka_1:
    image: bitnami/kafka:latest
    container_name: kafka_1
    ports:
      - "9092:9092"
      - "9094:9094"
    volumes:
      - kafka_service:/bitnami
    environment:
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,EXTERNAL://kafka_1:9094
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka_1:9093
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_NODE_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_NUM_PARTITIONS=2
      - BITNAMI_DEBUG=yes
    networks:
      - kafka_network

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    container_name: kafdrop
    ports:
      - "9000:9000"
    environment:
      - KAFKA_BROKERCONNECT=kafka_1:9094
      - JVM_OPTS=-Xms32M -Xmx64M
      - SERVER_SERVLET_CONTEXTPATH=/
    depends_on:
      - kafka_1
    networks:
      - kafka_network

  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka_ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka_1:9094
    depends_on:
      - kafka_1
    networks:
      - kafka_network

  kafka_exporter:
    image: danielqsj/kafka-exporter:latest
    container_name: kafka_exporter
    ports:
      - "9308:9308"
    command:
      - '--kafka.server=kafka_1:9092'
    networks:
      - kafka_network
    depends_on:
      - kafka_1

volumes:
  kafka_service:
    driver: local
