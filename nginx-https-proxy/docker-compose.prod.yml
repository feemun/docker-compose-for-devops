version: '3.8'

services:
  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-https-proxy-prod
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      # SSL 证书
      - ./ssl:/etc/ssl/certs:ro
      - ./ssl:/etc/ssl/private:ro
      
      # Nginx 配置
      - ./nginx-config/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-config/sites-enabled:/etc/nginx/nginx-config/sites-enabled:ro
      
      # 日志目录（生产环境建议挂载到宿主机）
      - ./logs:/var/log/nginx
      
      # 错误页面
      - ./html:/usr/share/nginx/html:ro
      
      # 缓存目录
      - nginx-cache:/var/cache/nginx
    
    environment:
      # Nginx 优化参数
      - NGINX_WORKER_PROCESSES=auto
      - NGINX_WORKER_CONNECTIONS=4096
      - NGINX_WORKER_RLIMIT_NOFILE=65535
      
      # 日志级别
      - NGINX_ERROR_LOG_LEVEL=warn
      
      # 时区设置
      - TZ=Asia/Shanghai
    
    # 资源限制（生产环境）
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
      
      # 重启策略
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    
    # 健康检查
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health", "||", "exit", "1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # 安全设置
    security_opt:
      - no-new-privileges:true
    
    # 只读根文件系统（提高安全性）
    read_only: true
    
    # 临时文件系统
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
      - /var/run:noexec,nosuid,size=100m
      - /var/cache/nginx:noexec,nosuid,size=500m
    
    # 网络配置
    networks:
      - nginx-network
    
    # 日志配置
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "5"
        compress: "true"
    
    # 标签（用于监控和管理）
    labels:
      - "com.example.service=nginx-proxy"
      - "com.example.environment=production"
      - "com.example.version=2.0.0"
      - "traefik.enable=false"  # 如果使用 Traefik

# 网络配置
networks:
  nginx-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.26.0.0/16
          gateway: 172.26.0.1
    driver_opts:
      com.docker.network.bridge.name: nginx-br0
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.driver.mtu: 1500

# 数据卷
volumes:
  nginx-cache:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1g,uid=101,gid=101  # nginx user