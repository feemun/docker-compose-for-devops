# Nginx服务配置模板 - 增强版
# 使用方法：复制此文件并替换占位符
# 支持的占位符：
#   nacos - 服务别名（URL路径）
#   18080 - 服务端口
#   {{SERVICE_NAME}} - 服务名称（用于日志和监控）

# WebSocket连接升级映射
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# 限流配置
limit_req_zone $binary_remote_addr zone=nacos_req:10m rate=100r/m;
limit_conn_zone $binary_remote_addr zone=nacos_conn:10m;

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name nacos.10.0.0.6;
    
    # 安全头（HTTP）
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # 重定向所有HTTP请求到HTTPS
    location /nacos {
        return 301 https://$server_name$request_uri;
    }
    

}

# HTTPS服务配置
server {
    listen 443 ssl;
    http2 on;
    server_name nacos.10.0.0.6;
    
    # SSL证书配置
    ssl_certificate /etc/ssl/certs/server.crt;
    ssl_certificate_key /etc/ssl/private/server.key;
    # SSL配置使用全局设置（在nginx.conf中定义）
    
    # 增强安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' ws: wss:;" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # 自定义日志格式
    access_log /var/log/nginx/nacos_access.log main;
    error_log /var/log/nginx/nacos_error.log warn;
    
    # 服务代理配置
    location /nacos {
        # 限流和连接限制
        limit_req zone=nacos_req burst=20 nodelay;
        limit_conn nacos_conn 50;
        
        # 路径重写：移除前缀
        rewrite ^/nacos(/.*)$ $1 break;
        rewrite ^/nacos$ / break;
        
        # 代理到后台服务
        proxy_pass http://10.0.0.6:18080;
        
        # 增强代理头设置
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Service-Name "nacos";
        
        # 优化超时设置
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        proxy_next_upstream_timeout 10s;
        proxy_next_upstream_tries 3;
        
        # 优化缓冲设置
        proxy_buffering on;
        proxy_buffer_size 8k;
        proxy_buffers 16 8k;
        proxy_busy_buffers_size 16k;
        proxy_temp_file_write_size 64k;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        # 错误处理
        proxy_intercept_errors on;
        error_page 502 503 504 /50x_nacos.html;
        
        # 缓存控制（根据需要调整）
        proxy_cache_bypass $http_upgrade;
        proxy_no_cache $http_upgrade;
    }
    

    
    # 静态错误页面
    location = /50x_nacos.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    # 服务状态监控端点
    location = /status/nacos {
        access_log off;
        return 200 '{"service":"nacos","status":"active","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }
    
    # 禁止访问敏感文件
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    location ~ \.(conf|log|bak|backup|old|tmp)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}